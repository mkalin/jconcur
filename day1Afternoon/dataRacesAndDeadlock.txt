
 Twin perils of multithreading are data races and deadlock:

  -- A 'data race' ('race condition', 'memory consistency error') can occur when two or more threads 

             (1) have access at the same time to the same memory location and 

             (2) at least one them can perform a 'write' ('mutating') operation on the shared location.

  -- Deadlock occurs when two or more threads must wait on a condition that 
     cannot occur unless one or more of the waiters proceeds.

     # Deadlock also can occur under multiprocessing.

  -- For a program to execute efficiently and correctly, both perils must be avoided.

     # In other words, the thread synchronization (coordination) must be 'just right':

       ## 'Under synchronization' may lead to data races, which in turn
          means that the program may not behave correctly.

       ## 'Over synchronization' may degrade concurrency/parallelism, resulting in too much
          single-threaded execution--or even in deadlock.

   -- There are various ways to make Java programs 'thread-safe' (aka 'concurrent-aware'),
      from the fundamental synchronized block (explicit locking) to higher-level mechanisms that
      hide the 'explicit locking' of shared memory locations. All such mechanisms 
      must ensure mutual exclusion (single-threaded execution) of critical sections.

      # A 'critical section' is a section of code conducive to a data race.

      # So a 'thread-safe' program must ensure single-threaded execution of critical sections.

  -- In Java, a synchronized block implements a 'monitor', a synchronization construct that supports
     mutual exclusion and related features.

     # 'lock' and 'mutex' are used here as synonyms for 'monitor', as each emphasizes mutual exclusion.

  -- Programming languages in general (including Java) neither detect nor recover from deadlock.

     # Production-grade database systems typically have (some level of) deadlock avoidance/recovery. 

     # The easy-to-say-but-hard-to-do guide for concurrent programmers: Deadlock is really bad, so don't go there!




  

 
